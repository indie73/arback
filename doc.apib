FORMAT: 1A

# Data Structures

## Instruction
+ id (number, required)
+ name (string, required)

## Detail (object)
+ id (number, required)
+ count (number, required)
+ name (string, required)
+ shortName (string, required)

## Step (object)
+ id (number, required)
+ description (string, required)

## ControlPoints
+ id (number, required)
+ username (string, required)
+ time (number, required)

# arback

## Файл [/api/v1/file]

### Загрузить файл [POST /api/v1/files]

+ Request (multipart/form-data;boundary=BOUNDARY)
    + Body

            --BOUNDARY

            Content-Disposition: form-data; filename="$filename"
            Content-Type: $mimetype
            Content-Transfer-Encoding: binary

            $binarydata
            --BOUNDARY--

+ Response 200 (application/json)
    + Attributes
        + One Of
            + Properties
                + status (enum, required)
                    + ok - файл загружен успешно
                + id: 1 (number, required)
            + Properties
                + status (enum, required)
                    + fileIncorrect - ошибка загрузки файла

### Получить список файлов [GET /api/v1/files]

+ Response 200 (application/json)
    + Attributes
        + One Of
            + Properties
                + status (enum, required)
                    + ok
                + files (array[number], required, fixed-type) - массив идентификаторов файлов

### Получить файл [GET /api/v1/files/{id}]

+ Parameters
    + id: `1` (string, required) - id файла

+ Response 302
  Успешный редирект на скачивание файла
  + Attributes

## Инструкции [/api/v1/instructions]

### Получить инструкции [GET /api/v1/instructions]

+ Response 200 (application/json)
    + Attributes
        + status (enum, required)
            + ok
        + instructions (array[Instruction], required, fixed-type) - массив инструкцей

### Получить инструкцию [GET /api/v1/instructions/{id}]

+ Parameters
    + id: `1` (string, required) - id инструкции

+ Response 200 (application/json)
    + Attributes
        + status (enum, required)
            + ok
        + details (array[Detail], required, fixed-type) - массив деталей
        + steps (array[Step], required, fixed-type) - массив шагов

## Контрольные точки [/control_points]

### Получить контрольные точки [GET /api/v1/control_points]

+ Response 200 (application/json)
    + Attributes
        + status (enum, required)
            + ok
        + control_points (array[ControlPoints], required, fixed-type) - массив контрольных точек

