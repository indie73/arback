FORMAT: 1A

# arback

## Файл [/api/v1/file]

### Загрузить файл [POST /api/v1/files]

+ Request (multipart/form-data;boundary=BOUNDARY)
    + Body

            --BOUNDARY

            Content-Disposition: form-data; filename="$filename"
            Content-Type: $mimetype
            Content-Transfer-Encoding: binary

            $binarydata
            --BOUNDARY--

+ Response 200 (application/json)
    + Attributes
        + One Of
            + Properties
                + status (enum, required)
                    + ok - файл загружен успешно
                + id: 1 (number, required)
            + Properties
                + status (enum, required)
                    + fileIncorrect - ошибка загрузки файла

### Получить список файлов [GET /api/v1/files]

+ Response 200 (application/json)
    + Attributes
        + One Of
            + Properties
                + status (enum, required)
                    + ok
                + files (array[number], required, fixed-type) - массив идентификаторов файлов

### Получить файл [GET /api/v1/files/{id}]

+ Parameters
    + id: `1` (string, required) - id файла

+ Response 302
  Успешный редирект на скачивание файла
  + Attributes

## События [/api/v1/events]

### Создать события [POST /api/v1/events]

+ Request (application/json)
    + Attributes
        + username (string, required)
        + correctly (boolean, required)
        + description (string, required)

+ Response 200 (application/json)
    + Attributes
        + One Of
            + Properties
                + status (enum, required)
                    + ok

### Получить список событий [GET /api/v1/events]

+ Response 200 (application/json)
    + Attributes
        + One Of
            + Properties
                + status (enum, required)
                    + ok
                + events (array[number], required, fixed-type) - массив идентификаторов событий

### Получить событие [GET /api/v1/events/{id}]

+ Parameters
    + id: `1` (string, required) - id события

+ Response 200 (application/json)
    + Attributes
        + status (enum, required)
            + ok
        + username (string, required)
        + correctly (boolean, required)
        + description (string, required)

## Цеха [/api/v1/workshops]

### Создать цех [POST /api/v1/workshops]

+ Request (application/json)
    + Attributes
        + name (string, required)
        + description (string, required)
        + plots (array[number], required, fixed-type) - массив идентификаторов участков

+ Response 200 (application/json)
    + Attributes
        + One Of
            + Properties
                + status (enum, required)
                    + ok
                    + error

### Получить список цехов [GET /api/v1/workshops]

+ Response 200 (application/json)
    + Attributes
        + One Of
            + Properties
                + status (enum, required)
                    + ok
                + workshops (array[number], required, fixed-type) - массив идентификаторов цехов

### Получить информацию о цехе [GET /api/v1/workshops/{id}]

+ Parameters
    + id: `1` (string, required) - id цеха

+ Response 200 (application/json)
    + Attributes
        + status (enum, required)
            + ok
        + name (string, required)
        + description (string, required)
        + plots (array[number], required, fixed-type) - массив идентификаторов участков

### Изменить цех [PUT /api/v1/workshops/{id}]

+ Parameters
    + id: `1` (string, required) - id цеха

+ Request (application/json)
    + Attributes
        + name (string, required)
        + description (string, required)
        + plots (array[number], required, fixed-type) - массив идентификаторов участков

+ Response 200 (application/json)
    + Attributes
        + One Of
            + Properties
                + status (enum, required)
                    + ok
                    + error

### Удалить цех [PUT /api/v1/workshops/{id}]

+ Parameters
    + id: `1` (string, required) - id цеха

+ Response 200 (application/json)
    + Attributes
        + One Of
            + Properties
                + status (enum, required)
                    + ok
                    + error

## Детали [/api/v1/details]

### Загрузить деталь [POST /api/v1/details]

### Получить детали [GET /api/v1/details]

### Получить деталь [GET /api/v1/details/{id}]

+ Parameters
    + id: `1` (string, required) - id детали

+ Response 200 (application/json)
    + Attributes
        + status (enum, required)
            + ok
        + count (number, required)
        + name (string, required)
        + shortName (string, required)

### Изменить деталь [PUT /api/v1/details/{id}]

### Удалить деталь [PUT /api/v1/details/{id}]

## Шаги [/api/v1/steps]

### Загрузить шаг [POST /api/v1/steps]

### Получить шаги [GET /api/v1/steps]

### Получить шаг [GET /api/v1/steps/{id}]

+ Parameters
    + id: `1` (string, required) - id шага

+ Response 200 (application/json)
    + Attributes
        + status (enum, required)
            + ok
        + description (string, required)

### Изменить шаг [PUT /api/v1/steps/{id}]

### Удалить шаг [PUT /api/v1/steps/{id}]

## Инструкции [/api/v1/instructions]

### Загрузить инструкции [POST /api/v1/instructions]

### Получить инструкции [GET /api/v1/instructions]

### Получить инструкцию [GET /api/v1/instructions/{id}]

+ Parameters
    + id: `1` (string, required) - id инструкции

+ Response 200 (application/json)
    + Attributes
        + status (enum, required)
            + ok
        + details (array[number], required, fixed-type) - массив идентификаторов деталей
        + steps (array[number], required, fixed-type) - массив идентификаторов шагов

### Изменить инструкцию [PUT /api/v1/instructions/{id}]

### Удалить инструкцию  [PUT /api/v1/instructions/{id}]

